name: Django CI/CD with Docker

on:
  push:
    branches:
      - main
      - feature/localization
      - feature/restapi
      - feature/deployement
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.build.outputs.image-tag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        id: build
        run: |
          # Build the image using your Dockerfile in the repository root
          docker build -t my-app:latest .
          # Tag the image with the Git SHA for uniqueness
          IMAGE_TAG="my-app:${{ github.sha }}"
          docker tag my-app:latest $IMAGE_TAG
          echo "::set-output name=image-tag::$IMAGE_TAG"
          # Save the image as a tarball for use in later jobs
          docker save $IMAGE_TAG -o my-app-image.tar

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: my-app-image.tar

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .
      - name: Load Docker Image
        run: docker load -i my-app-image.tar
      - name: Run Tests in Docker Container
        run: |
          docker run --rm my-app:${{ github.sha }} python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .
      - name: Load Docker Image
        run: docker load -i my-app-image.tar
      - name: Simulate Deployment
        run: |
          docker run -d --name deployed-app -p 8000:8000 my-app:${{ github.sha }}
          sleep 10
          curl -f http://localhost:8000 || (docker logs deployed-app && exit 1)
          docker stop deployed-app